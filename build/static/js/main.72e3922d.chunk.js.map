{"version":3,"sources":["components/Header/index.js","components/NavSearch/index.js","utils/API.js","components/Table/index.js","App.js","index.js"],"names":["Header","className","SearchForm","searchForEmployee","onChange","name","list","type","placeholder","id","axios","get","Table","useState","employees","filteredEmployees","employeeState","setEmployeeState","useEffect","API","then","res","data","results","NavSearch","e","searchValue","target","value","toLowerCase","searchResult","filter","user","first","last","includes","map","src","picture","medium","email","cell","Date","dob","date","toLocaleDateString","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAeeA,MAZf,WACE,OACE,yBAAKC,UAAU,UACb,kDACA,oH,6BCeSC,MAlBf,YAA4C,IAAtBC,EAAqB,EAArBA,kBACpB,OACE,0BAAMF,UAAU,sBACd,yBAAKA,UAAU,cACb,2BACEG,SAAUD,EACVE,KAAK,OACLC,KAAK,OACLC,KAAK,OACLN,UAAU,eACVO,YAAY,sBACZC,GAAG,Y,yBCdE,EAEH,WACR,OAAOC,IAAMC,IAAI,iDC+DNC,MA9Df,WAAkB,IAAD,EAC2BC,mBAAS,CACjDC,UAAW,GACXC,kBAAmB,KAHN,mBACRC,EADQ,KACOC,EADP,KA2Bf,OArBAC,qBAAU,WACRC,IAAeC,MAAK,SAACC,GACnBJ,EAAiB,2BACZD,GADW,IAEdF,UAAWO,EAAIC,KAAKC,QACpBR,kBAAmBM,EAAIC,KAAKC,gBAG/B,IAcD,yBAAKtB,UAAU,aACb,6BACE,kBAACuB,EAAD,CAAWrB,kBAdS,SAACsB,GACzB,IAAIC,EAAcD,EAAEE,OAAOC,MAC3BF,EAAcA,EAAYG,cAC1B,IAAIC,EAAY,YAAOd,EAAcF,WACrCgB,EAAeA,EAAaC,QAAO,SAACC,GAElC,MADe,UAAGA,EAAK3B,KAAK4B,MAAb,YAAsBD,EAAK3B,KAAK6B,MAAOL,cACtCM,SAAST,MAE3BT,EAAiB,2BAAKD,GAAN,IAAqBD,kBAAmBe,SAQtD,6BACA,6BACA,+BACE,+BACE,4BACE,qCACA,oCACA,qCACA,qCACA,qCAGJ,+BACGd,EAAcD,kBAAkBqB,KAAI,SAACJ,GAAD,OACnC,4BACE,4BACE,yBAAKK,IAAKL,EAAKM,QAAQC,UAEzB,sCAAQP,EAAK3B,KAAK4B,MAAlB,YAA2BD,EAAK3B,KAAK6B,OACrC,4BAAKF,EAAKQ,OACV,4BAAKR,EAAKS,MACV,4BAAK,IAAIC,KAAKV,EAAKW,IAAIC,MAAMC,8B,MC3C5BC,MAVf,WACE,OACE,yBAAK7C,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,EAAD,Q,MCJN8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.72e3922d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1>Employee Directory</h1>\n      <p>\n        Click on carrots to filter by heading or use the search box to narrow\n        your results.\n      </p>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./styles.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm({ searchForEmployee }) {\n  return (\n    <form className=\"search form-inline\">\n      <div className=\"form-group\">\n        <input\n          onChange={searchForEmployee}\n          name=\"term\"\n          list=\"term\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type Name to Search\"\n          id=\"term\"\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import axios from \"axios\";\nexport default {\n  // Gets all users\n  getUsers: function () {\n    return axios.get(\"https://randomuser.me/api/?results=20&nat=us\");\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport NavSearch from \"../NavSearch/index\";\nimport \"./styles.css\";\nimport API from \"../../utils/API\";\n\nfunction Table() {\n  const [employeeState, setEmployeeState] = useState({\n    employees: [],\n    filteredEmployees: [],\n  });\n\n  useEffect(() => {\n    API.getUsers().then((res) => {\n      setEmployeeState({\n        ...employeeState,\n        employees: res.data.results,\n        filteredEmployees: res.data.results,\n      });\n    });\n  }, []);\n\n  const searchForEmployee = (e) => {\n    let searchValue = e.target.value;\n    searchValue = searchValue.toLowerCase();\n    let searchResult = [...employeeState.employees];\n    searchResult = searchResult.filter((user) => {\n      let fullName = `${user.name.first} ${user.name.last}`.toLowerCase();\n      return fullName.includes(searchValue);\n    });\n    setEmployeeState({ ...employeeState, filteredEmployees: searchResult });\n  };\n\n  return (\n    <div className=\"container\">\n      <div>\n        <NavSearch searchForEmployee={searchForEmployee} />\n      </div>\n      <br />\n      <br />\n      <table>\n        <thead>\n          <tr>\n            <th>Image</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>DOB</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employeeState.filteredEmployees.map((user) => (\n            <tr>\n              <td>\n                <img src={user.picture.medium} />\n              </td>\n              <td>{`${user.name.first} ${user.name.last}`}</td>\n              <td>{user.email}</td>\n              <td>{user.cell}</td>\n              <td>{new Date(user.dob.date).toLocaleDateString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Table from \"./components/Table\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}